-- 1. What is the demographic profile of the bank's clients and how does it vary across districts?

SELECT * FROM DISTRICT
SELECT * FROM CLIENT
SELECT * FROM ACCOUNT;
SELECT * FROM ORDER_LIST;
SELECT * FROM TRANSACTIONS;
SELECT * FROM DISTRICT;
SELECT * FROM CARD;
SELECT * FROM DISPOSTION;
SELECT * FROM LOAN

--FIND MALE AND FEMALE


select 
  sum( case when sex = 'Male' then 1 end) as Male_client ,
  sum( case when sex = 'Female' then 1 end) as Female_client
  from client

  select 
  sum( case when sex = 'Male' then 1 end)*100/count(*) as Male_client ,
  sum( case when sex = 'Female' then 1 end)*100/count(*) as Female_client
  from client

--Adding age column in client column 
 ALTER TABLE CLIENT
 add COLUMN AGE int

 UPDATE CLIENT
 SET AGE = datediff(year,birth_date,'2022-12-31')
 where birth_date = birth_date

 -- 1. What is the demographic profile of the bank's clients and how does it vary across districts?
 CREATE OR REPLACE TABLE CZEC_DEMOGRAPHIC_DATA_KPI AS
select c.district_id, d.district_name, avg(c.age) as average_age ,d.average_salary,
 sum( case when sex = 'Male' then 1 end)*100/count(*) as Male_client ,
  sum( case when sex = 'Female' then 1 end)*100/count(*) as Female_client,
  count(*) as Total_client
from 
client c
join district d
on d.district_code = c.district_id 
group by 1,2,4
order by 1;

-- 2. How the banks have performed over the years. Give their detailed analysis year & month-wise.
SELECT * FROM ACC_LATEST_TXNS_WITH_BALANCE ;

SELECT LATEST_TXN_DATE,COUNT(*) AS TOT_TXNS
FROM ACC_LATEST_TXNS_WITH_BALANCE
GROUP BY 1
ORDER BY 2 DESC;

--ASSUMING EVERY LAST MONTH CUSTOMER ACCOUNT IS GETTING TXNCTED

CREATE OR REPLACE TABLE BANK_ACC_WITH_CLOSING_BALANCE
AS
SELECT LTD.*,TXN.BALANCE AS CLOSING_BALANCE
FROM TRANSACTIONS AS TXN
INNER JOIN 
(
   SELECT  ACCOUNT_ID,YEAR(DATE) AS TXN_YEAR,
   MONTH(DATE) AS TXN_MONTH,
   MAX(DATE) AS LATEST_TXN_DATE,BANK
   FROM TRANSACTIONS
   GROUP BY 1,2,3,5
   ORDER BY 1,2,3

) AS LTD ON TXN.ACCOUNT_ID = LTD.ACCOUNT_ID AND TXN.DATE = LTD.LATEST_TXN_DATE

ORDER BY TXN.ACCOUNT_ID,LTD.TXN_YEAR,LTD.BANK;

select * from BANK_ACC_WITH_CLOSING_BALANCE;;


CREATE OR REPLACE TABLE BANKING_KPI AS(
SELECT BAWCB.BANK,BAWCB.ACCOUNT_ID,YEAR(BAWCB.LATEST_TXN_DATE) AS TXN_YEAR,A.ACCOUNT_TYPE,
COUNT(DISTINCT BAWCB.ACCOUNT_ID) AS TOTAL_ACCOUNTS, 
COUNT(DISTINCT T.TRANS_ID) AS TOTAL_TXNS,
COUNT(CASE WHEN T.TYPE = 'Credit' THEN 1 END) AS DEPOSIT_COUNT ,
COUNT(CASE WHEN T.TYPE = 'Withdrawal' THEN 1 END) AS WITHDRAWAL_COUNT,
SUM(BAWCB.CLOSING_BALANCE) AS TOTAL_BALANCE_OF_ALL_ACCOUNTS_IN_BANK,
ROUND((DEPOSIT_COUNT / TOTAL_TXNS) * 100,2)  AS DEPOSIT_PERC ,
ROUND((WITHDRAWAL_COUNT / TOTAL_TXNS) * 100,2) AS WITHDRAWAL_PERC ,
ROUND(TOTAL_BALANCE_OF_ALL_ACCOUNTS_IN_BANK / TOTAL_ACCOUNTS,0) AS AVG_BALANCE,
ROUND(TOTAL_TXNS/TOTAL_ACCOUNTS,0) AS TXNS_PER_ACC
FROM TRANSACTIONS AS T
INNER JOIN  BANK_ACC_WITH_CLOSING_BALANCE AS BAWCB ON T.ACCOUNT_ID = BAWCB.ACCOUNT_ID AND T.BANK = BAWCB.BANK
LEFT OUTER JOIN  ACCOUNT AS A ON T.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4);

select BANK,TXN_YEAR,ROUND(SUM(AVG_BALANCE),0) AS TOT_AVG_BALANCE from BANKING_KPI GROUP BY 1,2 ORDER BY 1,2;


CREATE OR REPLACE TABLE BANKING_LOAN_KPI AS(
SELECT T.BANK,ACC_HAVING_LOAN.LOAN_YEAR,ACC_HAVING_LOAN.LOAN_MONTH,ACC_HAVING_LOAN.STATUS,
       ACC_HAVING_LOAN.ACCOUNT_ID,A.ACCOUNT_TYPE,SUM(ACC_HAVING_LOAN.AMOUNT) AS LOAN_AMOUNT
FROM TRANSACTIONS T
INNER JOIN (SELECT 
            YEAR(DATE) AS LOAN_YEAR,
            MONTH(DATE) AS LOAN_MONTH,STATUS,ACCOUNT_ID,SUM(AMOUNT) AS AMOUNT
            FROM LOAN GROUP BY 1,2,3,4 ORDER BY 1,2,3,4)AS ACC_HAVING_LOAN
ON T.ACCOUNT_ID=ACC_HAVING_LOAN.ACCOUNT_ID
INNER JOIN ACCOUNT A ON ACC_HAVING_LOAN.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4,5,6
ORDER BY 1,2,3,4,5,6);

SELECT STATUS,ACCOUNT_TYPE,COUNT(ACCOUNT_ID) FROM BANKING_LOAN_KPI GROUP BY 1,2 ORDER BY 1,2;


CREATE OR REPLACE TABLE ACC_HAVING_CARD AS(
SELECT 
D.ACCOUNT_ID,C.TYPE,C.ISSUED
FROM
DISPOSITION D
INNER JOIN CARD C ON D.DISP_ID = C.DISP_ID ORDER BY ISSUED);

SELECT `TYPE`,COUNT(ACCOUNT_ID) FROM ACC_HAVING_CARD GROUP BY 1; 





ALTER TABLE BANKING_LOAN_KPI MODIFY COLUMN BANK VARCHAR(45);
UPDATE BANKING_LOAN_KPI SET BANK = 'Sky Bank' WHERE BANK = 'sky BANK';
SELECT count(distinct account_id) FROM BANK_ACC_WITH_CLOSING_BALANCE;


select * FROM BANKING_LOAN_KPI;
SELECT ACCOUNT_ID,COUNT(DISTINCT BANK) FROM BANKING_LOAN_KPI GROUP  BY 1; 


select account_id ,sum(closing_balance),count(closing_balance)from BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 2 DESC LIMIT 50;

CREATE TABLE TOP_ACC_WITHIN_BANK AS(
  with cte as(
  SELECT bank,max(closing_balance) as balance FROM BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 1)
select 
c.bank,b.account_id,c.balance
from cte C
inner join BANK_ACC_WITH_CLOSING_BALANCE B on c.balance = b.closing_balance and c.bank = b.bank) ;

SELECT * FROM TOP_ACC_WITHIN_BANK;
DROP TABLE TOP_ACC_WITHIN_BANK;

create table top_acc_holders as (
SELECT 
B.ACCOUNT_ID,B.SUM,B.COUNT,A.ACCOUNT_TYPE
FROM ACCOUNT A
INNER JOIN
(select account_id ,round(sum(closing_balance),0) AS SUM,count(closing_balance) AS COUNT from BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 2 DESC) B
ON A.ACCOUNT_ID = B.ACCOUNT_ID
--WHERE A.ACCOUNT_TYPE = 'NRI account'
 order by 2 DESC);
 
 
SELECT * FROM top_acc_holders ORDER BY SUM DESC LIMIT 50;
SELECT * FROM TOP_ACC_WITHIN_BANK ORDER BY BALANCE DESC;

CREATE TABLE ACC_DEPOSITING_THEIR_MAX_BALANCE_PARTICULAR_BANK AS(
  with cte as(
  SELECT ACCOUNT_ID,max(closing_balance) as balance FROM BANK_ACC_WITH_CLOSING_BALANCE group by 1 order by 1 DESC)
select 
--c.ACCOUNT_ID,b.BANK,c.balance
C.ACCOUNT_ID,ROUND(C.BALANCE,0) AS BALANCE,B.BANK
from cte C
inner join BANK_ACC_WITH_CLOSING_BALANCE B on c.balance = b.closing_balance and c.ACCOUNT_ID = b.ACCOUNT_ID
ORDER BY C.BALANCE DESC);


SELECT * FROM ACC_DEPOSITING_THEIR_MAX_BALANCE_PARTICULAR_BANK;
SELECT * FROM BANK_ACC_WITH_CLOSING_BALANCE;
SELECT BANK,COUNT(BANK) FROM ACC_DEPOSITING_THEIR_MAX_BALANCE_PARTICULAR_BANK GROUP BY 1 ORDER BY 2 DESC;



SELECT BANK,CLOSING_BALANCE FROM BANK_ACC_WITH_CLOSING_BALANCE WHERE ACCOUNT_ID = 176 ORDER BY 2 DESC;


SELECT ACCOUNT_TYPE FROM BANKING_KPI WHERE ACCOUNT_ID = 96;----NRI account,Savings account
SELECT COUNT(DISTINCT account_ID)FROM BANK_ACC_WITH_CLOSING_BALANCE;


CREATE TABLE TOP_ACC_WITHIN_BANK_WITH_CARD_LOAN_STATUS AS(
SELECT 
A.*,B.TYPE,C.LOAN_AMOUNT,C.STATUS
FROM TOP_ACC_WITHIN_BANK A
LEFT OUTER JOIN ACC_HAVING_CARD B ON A.ACCOUNT_ID = B.ACCOUNT_ID
LEFT OUTER JOIN BANKING_LOAN_KPI C ON A.BANK = C.BANK AND A.ACCOUNT_ID = C.ACCOUNT_ID);

SELECT * FROM TOP_ACC_WITHIN_BANK_WITH_CARD_LOAN_STATUS;


SELECT BANK,SUM(TOTAL_BALANCE_OF_ALL_ACCOUNTS_IN_BANK) FROM BANKING_KPI GROUP BY 1ORDER BY 2 DESC;


SELECT STATUS,ACCOUNT_TYPE,COUNT(ACCOUNT_TYPE) FROM BANKING_LOAN_KPI where bank='SKY BANK' GROUP BY 1,2;
SELECT DISTINCT(BANK) FROM BANKING_LOAN_KPI
ORDER BY 1




SELECT BANK,COUNT(DISTINCT ACCOUNT_ID) FROM BANKING_LOAN_KPI GROUP BY 1 ORDER BY 2 DESC;